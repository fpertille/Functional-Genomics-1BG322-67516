## Benchmarking of different models and approaches to analyze GBS-MeDIP data, so far the two models that are more promissing for cluster 2 and 3 are a non-parametric method: Mann-whitney and a parametric: the moderated t test
#Let us start by setting the working directory and loading the packages:
library(statmod)
library("edgeR")
library(tidyverse)
library(tibble)
library(stringr)
library(palmerpenguins)
library(data.table)
library(dplyr)

# Mann-whitney ####
load("C:/Users/your_path/cluster.2.cpm.tmm.norm.rbc")
load("C:/Users/your_path/design.list")
group.list.RBC=as.data.frame(design.list$blindtreatment)
colnames(group.list.RBC)=c("group")
list.mann.whitney.RBC=list()
for (i in 1:nrow(cluster.2.cpm.tmm.norm.rbc)) {
  counts.window.RBC=as.data.frame(t(cluster.2.cpm.tmm.norm.rbc[i,-(1:2)]))
  colnames(counts.window.RBC)=c("V1")
  out = wilcox.test(counts.window.RBC$V1~group.list.RBC$group)
  out[8]=cluster.2.cpm.tmm.norm.rbc$gene[i]
  list.mann.whitney.RBC[[i]]=out
}

# Now that you have the list extract the p-values retaining the window #####
df.RBC=as.data.frame(do.call(cbind, list.mann.whitney.RBC))
df.RBC=t(df.RBC)
df.RBC=as.data.frame(df.RBC)
p.values.RBC=df.RBC[,c(3,8)]
colnames(p.values.RBC)=c("p_value","window")
p.values.RBC[p.values.RBC=="NaN"]<-NA
p.values.mann.whitney.cluster.2=na.omit(p.values.RBC, cols=c("p_value"))
save(p.values.mann.whitney.cluster.2,file = "C:/Users/your_path/p.values.mann.whitney.cluster.2")

# Perform the Benjamini-Hochberg correction for multiple testing #####
corrected_p.values.mann.whitney.cluster.2 <- p.adjust(p.values.mann.whitney.cluster.2, method = "BH")
save(corrected_p.values.mann.whitney.cluster.2,file = "C:/Users/your_path/corrected_p.values.mann.whitney.cluster.2.rda")

# Moderated t test #####
load("C:/your_path/cluster.2.raw.rbc")
load("C:/Users/your_path/design.list")
dge <- DGEList(counts=cluster.2.raw.rbc[,-c(1:2)], genes=cluster.2.raw.rbc[,1])
rownames(dge$counts) <- rownames(dge$genes) <- cluster.2.raw.rbc[,1]
dge <- calcNormFactors(dge)
design=model.matrix(~design.list$blindtreatment)
logCPM <- cpm(dge, log=TRUE)
fit <- lmFit(logCPM, design)
fit <- eBayes(fit, trend=TRUE)
top.p.values.t.test.limma.cluster.2=topTable(fit, coef=ncol(design),number = nrow(cluster.2.raw.rbc))
save(top.p.values.t.test.limma.cluster.2,file = "C:/Users/your_path/t.test.limma.cluster.2.rbc.rda")

# Perform the Benjamini-Hochberg correction for multiple testing #####
corrected_top.p.values.t.test.limma.cluster.2 <- p.adjust(top.p.values.t.test.limma.cluster.2, method = "BH")
save(corrected_top.p.values.t.test.limma.cluster.2,file = "C:/Users/your_path/corrected_top.p.values.t.test.limma.cluster.2.rda")
